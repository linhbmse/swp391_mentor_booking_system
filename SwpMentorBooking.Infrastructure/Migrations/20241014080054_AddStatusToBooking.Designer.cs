// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SwpMentorBooking.Infrastructure.Data;

#nullable disable

namespace SwpMentorBooking.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241014080054_AddStatusToBooking")]
    partial class AddStatusToBooking
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MentorSkill", b =>
                {
                    b.Property<int>("MentorDetailId")
                        .HasColumnType("int")
                        .HasColumnName("mentorDetailId");

                    b.Property<int>("SkillId")
                        .HasColumnType("int")
                        .HasColumnName("skillId");

                    b.HasKey("MentorDetailId", "SkillId")
                        .HasName("PK__MentorSk__F216C2BC014955C1");

                    b.HasIndex("SkillId");

                    b.ToTable("MentorSkill", (string)null);
                });

            modelBuilder.Entity("MentorSpecialization", b =>
                {
                    b.Property<int>("MentorDetailId")
                        .HasColumnType("int")
                        .HasColumnName("mentorDetailId");

                    b.Property<int>("SpecId")
                        .HasColumnType("int")
                        .HasColumnName("specId");

                    b.HasKey("MentorDetailId", "SpecId")
                        .HasName("PK__MentorSp__3FDDA9D8407555FE");

                    b.HasIndex("SpecId");

                    b.ToTable("MentorSpecialization", (string)null);
                });

            modelBuilder.Entity("SwpMentorBooking.Domain.Entities.AdminDetail", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.HasKey("UserId")
                        .HasName("PK__AdminDet__CB9A1CFFDF8EE67D");

                    b.ToTable("AdminDetail", (string)null);
                });

            modelBuilder.Entity("SwpMentorBooking.Domain.Entities.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LeaderId")
                        .HasColumnType("int")
                        .HasColumnName("leaderId");

                    b.Property<int>("MentorScheduleId")
                        .HasColumnType("int")
                        .HasColumnName("mentorScheduleId");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("note");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("timestamp")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasName("PK__Booking__3213E83F1608D3C9");

                    b.HasIndex("LeaderId");

                    b.HasIndex("MentorScheduleId");

                    b.ToTable("Booking", (string)null);
                });

            modelBuilder.Entity("SwpMentorBooking.Domain.Entities.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookingId")
                        .HasColumnType("int")
                        .HasColumnName("bookingId");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("comment");

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("GivenBy")
                        .HasColumnType("int")
                        .HasColumnName("givenBy");

                    b.Property<int>("GivenTo")
                        .HasColumnType("int")
                        .HasColumnName("givenTo");

                    b.Property<int>("Rating")
                        .HasColumnType("int")
                        .HasColumnName("rating");

                    b.HasKey("Id")
                        .HasName("PK__Feedback__3213E83F3AE2509A");

                    b.HasIndex("BookingId");

                    b.HasIndex("GivenBy");

                    b.HasIndex("GivenTo");

                    b.ToTable("Feedback", (string)null);
                });

            modelBuilder.Entity("SwpMentorBooking.Domain.Entities.MentorDetail", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.Property<string>("AdditionalContactInfo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("additionalContactInfo");

                    b.Property<string>("AltProgrammingLanguage")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("altProgrammingLanguage");

                    b.Property<int?>("BookingScore")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("bookingScore");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Education")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("education");

                    b.Property<string>("Framework")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("framework");

                    b.Property<string>("MainProgrammingLanguage")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mainProgrammingLanguage");

                    b.HasKey("UserId")
                        .HasName("PK__MentorDe__CB9A1CFFF907BA90");

                    b.ToTable("MentorDetail", (string)null);
                });

            modelBuilder.Entity("SwpMentorBooking.Domain.Entities.MentorSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<int>("MentorDetailId")
                        .HasColumnType("int")
                        .HasColumnName("mentorDetailId");

                    b.Property<int>("SlotId")
                        .HasColumnType("int")
                        .HasColumnName("slotId");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("available")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("PK__MentorSc__3213E83F9BAFAC8F");

                    b.HasIndex("MentorDetailId");

                    b.HasIndex("SlotId");

                    b.ToTable("MentorSchedule", (string)null);
                });

            modelBuilder.Entity("SwpMentorBooking.Domain.Entities.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("content");

                    b.Property<int>("LeaderId")
                        .HasColumnType("int")
                        .HasColumnName("leaderId");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("pending")
                        .HasColumnName("status");

                    b.Property<DateTime>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("timestamp")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("PK__Request__3213E83FC84E4E09");

                    b.HasIndex("LeaderId");

                    b.ToTable("Request", (string)null);
                });

            modelBuilder.Entity("SwpMentorBooking.Domain.Entities.Response", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("content");

                    b.Property<int>("RequestId")
                        .HasColumnType("int")
                        .HasColumnName("requestId");

                    b.Property<DateTime>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("timestamp")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasName("PK__Response__3213E83F78F78643");

                    b.HasIndex("RequestId");

                    b.ToTable("Response", (string)null);
                });

            modelBuilder.Entity("SwpMentorBooking.Domain.Entities.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__Skill__3213E83F276324B6");

                    b.ToTable("Skill", (string)null);
                });

            modelBuilder.Entity("SwpMentorBooking.Domain.Entities.Slot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time")
                        .HasColumnName("endTime");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time")
                        .HasColumnName("startTime");

                    b.HasKey("Id")
                        .HasName("PK__Slot__3213E83F9731706D");

                    b.ToTable("Slot", (string)null);
                });

            modelBuilder.Entity("SwpMentorBooking.Domain.Entities.Specialization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__Speciali__3213E83F976FAB98");

                    b.ToTable("Specialization", (string)null);
                });

            modelBuilder.Entity("SwpMentorBooking.Domain.Entities.StudentDetail", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("groupId");

                    b.Property<bool>("IsLeader")
                        .HasColumnType("bit")
                        .HasColumnName("isLeader");

                    b.Property<string>("StudentCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasColumnName("studentCode");

                    b.HasKey("UserId")
                        .HasName("PK__StudentD__CB9A1CFF37C0396D");

                    b.HasIndex("GroupId");

                    b.ToTable("StudentDetail", (string)null);
                });

            modelBuilder.Entity("SwpMentorBooking.Domain.Entities.StudentGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("groupName");

                    b.Property<int>("TopicId")
                        .HasColumnType("int")
                        .HasColumnName("topicId");

                    b.Property<int>("WalletId")
                        .HasColumnType("int")
                        .HasColumnName("walletId");

                    b.HasKey("Id")
                        .HasName("PK__StudentG__3213E83FF14C1241");

                    b.HasIndex("TopicId");

                    b.HasIndex(new[] { "WalletId" }, "UQ__StudentG__3785C87135049AF6")
                        .IsUnique();

                    b.HasIndex(new[] { "GroupName" }, "UQ__StudentG__9011AC823D3F31CC")
                        .IsUnique();

                    b.ToTable("StudentGroup", (string)null);
                });

            modelBuilder.Entity("SwpMentorBooking.Domain.Entities.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__Topic__3213E83F61BAB0FB");

                    b.HasIndex(new[] { "Name" }, "UQ__Topic__72E12F1B3A32507E")
                        .IsUnique();

                    b.ToTable("Topic", (string)null);
                });

            modelBuilder.Entity("SwpMentorBooking.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fullName");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("gender");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("isActive");

                    b.Property<bool>("IsFirstLogin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("isFirstLogin");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("phone");

                    b.Property<string>("ProfilePhoto")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("profilePhoto");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("default")
                        .HasColumnName("role");

                    b.HasKey("Id")
                        .HasName("PK__User__3213E83F8570832C");

                    b.HasIndex(new[] { "Email" }, "UQ__User__AB6E61643E9FB65A")
                        .IsUnique();

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("SwpMentorBooking.Domain.Entities.UserActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActivityTypeId")
                        .HasColumnType("int")
                        .HasColumnName("activityTypeId");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<int>("OperatorId")
                        .HasColumnType("int")
                        .HasColumnName("operatorId");

                    b.HasKey("Id")
                        .HasName("PK__UserActi__3213E83F82BF62E8");

                    b.HasIndex("ActivityTypeId");

                    b.HasIndex("OperatorId");

                    b.ToTable("UserActivity", (string)null);
                });

            modelBuilder.Entity("SwpMentorBooking.Domain.Entities.UserActivityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__UserActi__3213E83F2E45A05B");

                    b.ToTable("UserActivityType", (string)null);
                });

            modelBuilder.Entity("SwpMentorBooking.Domain.Entities.UserSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ExpireTime")
                        .HasColumnType("datetime")
                        .HasColumnName("expireTime");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.HasKey("Id")
                        .HasName("PK__UserSess__3213E83F997ACAC3");

                    b.HasIndex("UserId");

                    b.ToTable("UserSession", (string)null);
                });

            modelBuilder.Entity("SwpMentorBooking.Domain.Entities.Wallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Balance")
                        .HasColumnType("int")
                        .HasColumnName("balance");

                    b.HasKey("Id")
                        .HasName("PK__Wallet__3213E83FD152AE73");

                    b.ToTable("Wallet", (string)null);
                });

            modelBuilder.Entity("SwpMentorBooking.Domain.Entities.WalletTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("amount");

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("type");

                    b.Property<int>("WalletId")
                        .HasColumnType("int")
                        .HasColumnName("walletId");

                    b.HasKey("Id")
                        .HasName("PK__WalletTr__3213E83F1E11AD66");

                    b.HasIndex("WalletId");

                    b.ToTable("WalletTransaction", (string)null);
                });

            modelBuilder.Entity("MentorSkill", b =>
                {
                    b.HasOne("SwpMentorBooking.Domain.Entities.MentorDetail", null)
                        .WithMany()
                        .HasForeignKey("MentorDetailId")
                        .IsRequired()
                        .HasConstraintName("FK__MentorSki__mento__67DE6983");

                    b.HasOne("SwpMentorBooking.Domain.Entities.Skill", null)
                        .WithMany()
                        .HasForeignKey("SkillId")
                        .IsRequired()
                        .HasConstraintName("FK__MentorSki__skill__68D28DBC");
                });

            modelBuilder.Entity("MentorSpecialization", b =>
                {
                    b.HasOne("SwpMentorBooking.Domain.Entities.MentorDetail", null)
                        .WithMany()
                        .HasForeignKey("MentorDetailId")
                        .IsRequired()
                        .HasConstraintName("FK__MentorSpe__mento__345EC57D");

                    b.HasOne("SwpMentorBooking.Domain.Entities.Specialization", null)
                        .WithMany()
                        .HasForeignKey("SpecId")
                        .IsRequired()
                        .HasConstraintName("FK__MentorSpe__specI__3552E9B6");
                });

            modelBuilder.Entity("SwpMentorBooking.Domain.Entities.AdminDetail", b =>
                {
                    b.HasOne("SwpMentorBooking.Domain.Entities.User", "User")
                        .WithOne("AdminDetail")
                        .HasForeignKey("SwpMentorBooking.Domain.Entities.AdminDetail", "UserId")
                        .IsRequired()
                        .HasConstraintName("FK__AdminDeta__userI__4865BE2A");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SwpMentorBooking.Domain.Entities.Booking", b =>
                {
                    b.HasOne("SwpMentorBooking.Domain.Entities.StudentDetail", "Leader")
                        .WithMany("Bookings")
                        .HasForeignKey("LeaderId")
                        .IsRequired()
                        .HasConstraintName("FK__Booking__leaderI__53D770D6");

                    b.HasOne("SwpMentorBooking.Domain.Entities.MentorSchedule", "MentorSchedule")
                        .WithMany("Bookings")
                        .HasForeignKey("MentorScheduleId")
                        .IsRequired()
                        .HasConstraintName("FK__Booking__mentorS__54CB950F");

                    b.Navigation("Leader");

                    b.Navigation("MentorSchedule");
                });

            modelBuilder.Entity("SwpMentorBooking.Domain.Entities.Feedback", b =>
                {
                    b.HasOne("SwpMentorBooking.Domain.Entities.Booking", "Booking")
                        .WithMany("Feedbacks")
                        .HasForeignKey("BookingId")
                        .IsRequired()
                        .HasConstraintName("FK__Feedback__bookin__59904A2C");

                    b.HasOne("SwpMentorBooking.Domain.Entities.User", "GivenByNavigation")
                        .WithMany("FeedbackGivenByNavigations")
                        .HasForeignKey("GivenBy")
                        .IsRequired()
                        .HasConstraintName("FK__Feedback__givenB__5A846E65");

                    b.HasOne("SwpMentorBooking.Domain.Entities.User", "GivenToNavigation")
                        .WithMany("FeedbackGivenToNavigations")
                        .HasForeignKey("GivenTo")
                        .IsRequired()
                        .HasConstraintName("FK__Feedback__givenT__5B78929E");

                    b.Navigation("Booking");

                    b.Navigation("GivenByNavigation");

                    b.Navigation("GivenToNavigation");
                });

            modelBuilder.Entity("SwpMentorBooking.Domain.Entities.MentorDetail", b =>
                {
                    b.HasOne("SwpMentorBooking.Domain.Entities.User", "User")
                        .WithOne("MentorDetail")
                        .HasForeignKey("SwpMentorBooking.Domain.Entities.MentorDetail", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__MentorDet__userI__1F63A897");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SwpMentorBooking.Domain.Entities.MentorSchedule", b =>
                {
                    b.HasOne("SwpMentorBooking.Domain.Entities.MentorDetail", "MentorDetail")
                        .WithMany("MentorSchedules")
                        .HasForeignKey("MentorDetailId")
                        .IsRequired()
                        .HasConstraintName("FK__MentorSch__mento__4F12BBB9");

                    b.HasOne("SwpMentorBooking.Domain.Entities.Slot", "Slot")
                        .WithMany("MentorSchedules")
                        .HasForeignKey("SlotId")
                        .IsRequired()
                        .HasConstraintName("FK__MentorSch__slotI__5006DFF2");

                    b.Navigation("MentorDetail");

                    b.Navigation("Slot");
                });

            modelBuilder.Entity("SwpMentorBooking.Domain.Entities.Request", b =>
                {
                    b.HasOne("SwpMentorBooking.Domain.Entities.StudentDetail", "Leader")
                        .WithMany("Requests")
                        .HasForeignKey("LeaderId")
                        .IsRequired()
                        .HasConstraintName("FK__Request__leaderI__61316BF4");

                    b.Navigation("Leader");
                });

            modelBuilder.Entity("SwpMentorBooking.Domain.Entities.Response", b =>
                {
                    b.HasOne("SwpMentorBooking.Domain.Entities.Request", "Request")
                        .WithMany("Responses")
                        .HasForeignKey("RequestId")
                        .IsRequired()
                        .HasConstraintName("FK__Response__reques__6501FCD8");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("SwpMentorBooking.Domain.Entities.StudentDetail", b =>
                {
                    b.HasOne("SwpMentorBooking.Domain.Entities.StudentGroup", "Group")
                        .WithMany("StudentDetails")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK__StudentDe__group__3EDC53F0");

                    b.HasOne("SwpMentorBooking.Domain.Entities.User", "User")
                        .WithOne("StudentDetail")
                        .HasForeignKey("SwpMentorBooking.Domain.Entities.StudentDetail", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__StudentDe__userI__2334397B");

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SwpMentorBooking.Domain.Entities.StudentGroup", b =>
                {
                    b.HasOne("SwpMentorBooking.Domain.Entities.Topic", "Topic")
                        .WithMany("StudentGroups")
                        .HasForeignKey("TopicId")
                        .IsRequired()
                        .HasConstraintName("FK__StudentGr__topic__3CF40B7E");

                    b.HasOne("SwpMentorBooking.Domain.Entities.Wallet", "Wallet")
                        .WithOne("StudentGroup")
                        .HasForeignKey("SwpMentorBooking.Domain.Entities.StudentGroup", "WalletId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__StudentGr__walle__3DE82FB7");

                    b.Navigation("Topic");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("SwpMentorBooking.Domain.Entities.UserActivity", b =>
                {
                    b.HasOne("SwpMentorBooking.Domain.Entities.UserActivityType", "ActivityType")
                        .WithMany("UserActivities")
                        .HasForeignKey("ActivityTypeId")
                        .IsRequired()
                        .HasConstraintName("FK__UserActiv__activ__2BC97F7C");

                    b.HasOne("SwpMentorBooking.Domain.Entities.User", "Operator")
                        .WithMany("UserActivities")
                        .HasForeignKey("OperatorId")
                        .IsRequired()
                        .HasConstraintName("FK__UserActiv__opera__2CBDA3B5");

                    b.Navigation("ActivityType");

                    b.Navigation("Operator");
                });

            modelBuilder.Entity("SwpMentorBooking.Domain.Entities.UserSession", b =>
                {
                    b.HasOne("SwpMentorBooking.Domain.Entities.User", "User")
                        .WithMany("UserSessions")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UserSessi__userI__2610A626");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SwpMentorBooking.Domain.Entities.WalletTransaction", b =>
                {
                    b.HasOne("SwpMentorBooking.Domain.Entities.Wallet", "Wallet")
                        .WithMany("WalletTransactions")
                        .HasForeignKey("WalletId")
                        .IsRequired()
                        .HasConstraintName("FK__WalletTra__walle__4589517F");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("SwpMentorBooking.Domain.Entities.Booking", b =>
                {
                    b.Navigation("Feedbacks");
                });

            modelBuilder.Entity("SwpMentorBooking.Domain.Entities.MentorDetail", b =>
                {
                    b.Navigation("MentorSchedules");
                });

            modelBuilder.Entity("SwpMentorBooking.Domain.Entities.MentorSchedule", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("SwpMentorBooking.Domain.Entities.Request", b =>
                {
                    b.Navigation("Responses");
                });

            modelBuilder.Entity("SwpMentorBooking.Domain.Entities.Slot", b =>
                {
                    b.Navigation("MentorSchedules");
                });

            modelBuilder.Entity("SwpMentorBooking.Domain.Entities.StudentDetail", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Requests");
                });

            modelBuilder.Entity("SwpMentorBooking.Domain.Entities.StudentGroup", b =>
                {
                    b.Navigation("StudentDetails");
                });

            modelBuilder.Entity("SwpMentorBooking.Domain.Entities.Topic", b =>
                {
                    b.Navigation("StudentGroups");
                });

            modelBuilder.Entity("SwpMentorBooking.Domain.Entities.User", b =>
                {
                    b.Navigation("AdminDetail");

                    b.Navigation("FeedbackGivenByNavigations");

                    b.Navigation("FeedbackGivenToNavigations");

                    b.Navigation("MentorDetail");

                    b.Navigation("StudentDetail");

                    b.Navigation("UserActivities");

                    b.Navigation("UserSessions");
                });

            modelBuilder.Entity("SwpMentorBooking.Domain.Entities.UserActivityType", b =>
                {
                    b.Navigation("UserActivities");
                });

            modelBuilder.Entity("SwpMentorBooking.Domain.Entities.Wallet", b =>
                {
                    b.Navigation("StudentGroup");

                    b.Navigation("WalletTransactions");
                });
#pragma warning restore 612, 618
        }
    }
}
